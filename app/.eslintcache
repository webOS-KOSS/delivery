[{"/home/user/webos/delivery/app/src/index.js":"1","/home/user/webos/delivery/app/src/main.js":"2","/home/user/webos/delivery/app/src/store/index.js":"3","/home/user/webos/delivery/app/src/App/App.js":"4","/home/user/webos/delivery/app/src/App/AppStateDecorator.js":"5","/home/user/webos/delivery/app/src/views/log-app/LogPanel.js":"6","/home/user/webos/delivery/app/src/views/video-app/VideoPanel.js":"7","/home/user/webos/delivery/app/src/views/log-app/Logs.js":"8","/home/user/webos/delivery/app/src/views/video-app/VideoList.js":"9","/home/user/webos/delivery/app/src/views/video-app/Video.js":"10","/home/user/webos/delivery/app/src/views/video-app/Tiles.js":"11","/home/user/webos/delivery/app/src/components/log-app/Log.js":"12","/home/user/webos/delivery/app/src/components/video-app/Tile.js":"13"},{"size":450,"mtime":1664613289109,"results":"14","hashOfConfig":"15"},{"size":408,"mtime":1664613289109,"results":"16","hashOfConfig":"15"},{"size":621,"mtime":1664613289109,"results":"17","hashOfConfig":"15"},{"size":1484,"mtime":1665240403293,"results":"18","hashOfConfig":"15"},{"size":371,"mtime":1664613289109,"results":"19","hashOfConfig":"15"},{"size":2217,"mtime":1665433220407,"results":"20","hashOfConfig":"15"},{"size":1585,"mtime":1665245998952,"results":"21","hashOfConfig":"15"},{"size":588,"mtime":1665204145268,"results":"22","hashOfConfig":"15"},{"size":1343,"mtime":1665433281931,"results":"23","hashOfConfig":"15"},{"size":1589,"mtime":1665497177986,"results":"24","hashOfConfig":"15"},{"size":723,"mtime":1665238815465,"results":"25","hashOfConfig":"15"},{"size":656,"mtime":1665205513816,"results":"26","hashOfConfig":"15"},{"size":1013,"mtime":1665205073614,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"mtngfj",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"31"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"31"},"/home/user/webos/delivery/app/src/index.js",[],[],["74"],"/home/user/webos/delivery/app/src/main.js",[],[],"/home/user/webos/delivery/app/src/store/index.js",[],[],"/home/user/webos/delivery/app/src/App/App.js",[],[],"/home/user/webos/delivery/app/src/App/AppStateDecorator.js",[],[],"/home/user/webos/delivery/app/src/views/log-app/LogPanel.js",["75","76","77","78","79"],[],"import { Header, Panel } from \"@enact/sandstone/Panels\";\nimport Scroller from \"@enact/ui/Scroller\";\nimport Button from \"@enact/sandstone/Button\";\nimport Logs from \"./Logs\";\nimport LS2Request from \"@enact/webos/LS2Request\";\nimport { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./LogPanel.module.less\";\n\nconst LogPanel = ({ onClick }) => {\n  const [logs, setLogs] = useState([\"도착/수령 시간 | 도착/수령\"]);\n  const bridge = new LS2Request();\n\n  async function start() {\n    await init();\n    loop();\n  }\n\n  useEffect(() => {\n    start();\n  }, []);\n\n  const init = () => {\n    return new Promise((resolve, reject) => {\n      let params = {};\n      let lsRequest = {\n        service: \"luna://com.delivery.app.service\",\n        method: \"init\",\n        parameters: params,\n        onSuccess: (msg) => {\n          findHandler(msg);\n          resolve();\n          console.log(msg);\n        },\n        onFailure: (err) => {\n          console.log(err);\n          reject();\n        },\n      };\n      bridge.send(lsRequest);\n    });\n  };\n\n  const findHandler = (res) => {\n    let lst = [];\n    const results = res.results;\n    for (let i in results) {\n      let text = `${String(results[i].time)} | `;\n      if (results[i].status === \"arrived\") {\n        text += \"도착\";\n      }\n      if (results[i].status == \"received\") {\n        text += \"수령\";\n      }\n      lst.unshift(text);\n    }\n    setLogs(lst);\n    console.log(lst);\n  };\n\n  const loop = () => {\n    let params = { subscribe: true };\n    let lsRequest = {\n      service: \"luna://com.delivery.app.service\",\n      method: \"loop\",\n      parameters: params,\n      onSuccess: (msg) => {\n        console.log(msg);\n        findHandler(msg);\n      },\n      onFailure: (err) => {\n        console.log(err);\n      },\n    };\n    bridge.send(lsRequest);\n  };\n\n  return (\n    <Panel className={css.gnd}>\n      <Header className={css.gnd} title=\"배달 기록 조회\" />\n      <Button cssName={css.btn} onClick={onClick}>\n        영상 조회\n      </Button>\n      <Scroller>\n        <Logs>{logs}</Logs>\n      </Scroller>\n    </Panel>\n  );\n};\n\nLogPanel.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default LogPanel;\n","/home/user/webos/delivery/app/src/views/video-app/VideoPanel.js",["80"],[],"import kind from \"@enact/core/kind\";\nimport ThemeDecorator from \"@enact/sandstone/ThemeDecorator\";\nimport { Panels } from \"@enact/sandstone/Panels\";\nimport Chanageable from \"@enact/ui/Changeable\";\nimport PropTypes from \"prop-types\";\n\nimport VideoList from \"./VideoList\";\nimport Video from \"./Video\";\n\nimport css from \"./VideoPanel.module.less\";\n\nconst Sample = kind({\n  name: \"App\",\n\n  styles: {\n    css,\n    className: \"app\",\n  },\n\n  propTypes: {\n    index: PropTypes.number,\n    video: PropTypes.number,\n    onNavigate_: PropTypes.func,\n    onSelectVid: PropTypes.func,\n    onClick: PropTypes.func,\n    backBtn: PropTypes.func,\n  },\n\n  defaultProps: {\n    index: 0,\n  },\n\n  handlers: {\n    onSelectVid: (ev, { onNavigate_, onSelectVid }) => {\n      if (onSelectVid) {\n        onSelectVid({\n          video: ev.index,\n        });\n      }\n\n      // navigate to the detail panel on selection\n      if (onNavigate_) {\n        onNavigate_({\n          index: 1,\n        });\n      }\n    },\n\n    backBtn: ({ onNavigate_ }) => {\n      onNavigate_({\n        index: 0,\n      });\n    },\n  },\n\n  render: ({ index, video, onNavigate_, onSelectVid, onClick, ...rest }) => (\n    <div {...rest}>\n      <Panels index={index} onBack={onNavigate_}>\n        <VideoList onSelectVid={onSelectVid} onClick={onClick}></VideoList>\n        <Video index={video} backBtn={onNavigate_} />\n      </Panels>\n    </div>\n  ),\n});\n\nconst VideoPanel = Chanageable(\n  { prop: \"index\", change: \"onNavigate_\" },\n  Chanageable({ prop: \"video\", change: \"onSelectVid\" }, Sample)\n);\n\nexport default ThemeDecorator(VideoPanel);\n","/home/user/webos/delivery/app/src/views/log-app/Logs.js",[],[],"/home/user/webos/delivery/app/src/views/video-app/VideoList.js",["81"],[],"import { Header, Panel } from \"@enact/sandstone/Panels\";\nimport Scroller from \"@enact/ui/Scroller\";\nimport Button from \"@enact/sandstone/Button\";\nimport Proptype from \"prop-types\";\nimport LS2Request from \"@enact/webos/LS2Request\";\nimport { useEffect, useState } from \"react\";\nimport css from \"./VideoList.module.less\";\n\nimport Tiles from \"./Tiles\";\n\nconst VideoList = ({ onSelectVid, onClick, ...rest }) => {\n  const [tiles, setTiles] = useState([\"loading\"]);\n\n  const bridge = new LS2Request();\n  const getVids = () => {\n    let params = {};\n    let lsRequest = {\n      service: \"luna://com.delivery.app.service\",\n      method: \"getVids\",\n      parameter: params,\n      onSuccess: (msg) => {\n        console.log(msg);\n        setTiles(msg.vidlist);\n      },\n      onFailure: (err) => {\n        console.log(err);\n      },\n    };\n    bridge.send(lsRequest);\n  };\n\n  useEffect(() => {\n    getVids();\n  }, []);\n\n  return (\n    <Panel className={css.gnd} {...rest}>\n      <Header className={css.gnd} title=\"영상 조회\" />\n      <Button className={css.btn} onClick={onClick}>\n        배달 기록 조회\n      </Button>\n      <Scroller>\n        <Tiles onSelectVid={onSelectVid}>{tiles}</Tiles>\n      </Scroller>\n    </Panel>\n  );\n};\n\nVideoList.prototype = {\n  onSelectVid: Proptype.func,\n  onClick: Proptype.func,\n};\n\nexport default VideoList;\n","/home/user/webos/delivery/app/src/views/video-app/Video.js",["82"],[],"import kind from \"@enact/core/kind\";\nimport VideoPlayerBase from \"@enact/sandstone/VideoPlayer\";\nimport Panel from \"@enact/sandstone/Panels\";\nimport LS2Request from \"@enact/webos/LS2Request\";\nimport PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\n\nconst Player = ({ index, backBtn }) => {\n  const [vids, setVids] = useState([]);\n  const vid_index = index;\n  console.log(vid_index);\n\n  const bridge = new LS2Request();\n\n  const getVids = () => {\n    let params = {};\n    let lsRequest = {\n      service: \"luna://com.delivery.app.service\",\n      method: \"getVids\",\n      parameter: params,\n      onSuccess: (msg) => {\n        console.log(msg.vidlist);\n        setVids(msg.vidlist);\n      },\n      onFailure: (err) => {\n        console.log(err);\n      },\n    };\n    bridge.send(lsRequest);\n  };\n\n  useEffect(() => {\n    getVids();\n  }, []);\n\n  return (\n    <VideoPlayerBase title={vids[vid_index]} onBack={backBtn}>\n      <source\n        src={\"http://3.34.50.139:8000/package/\" + vids[vid_index] + \".mp4\"}\n        // src={\"http://3.34.50.139:8000/package/koss.mp4\"}\n        type=\"video/mp4\"\n      />\n    </VideoPlayerBase>\n  );\n};\n\nPlayer.propTypes = {\n  index: PropTypes.number,\n  backBtn: PropTypes.func,\n};\n\nconst VideoBase = kind({\n  name: \"VideoBase\",\n\n  propTypes: {\n    index: PropTypes.number,\n    backBtn: PropTypes.func,\n  },\n\n  render: ({ index, backBtn, ...rest }) => (\n    <Panel {...rest}>\n      <Player index={index} backBtn={backBtn} />\n    </Panel>\n  ),\n});\n\nconst Video = VideoBase;\n\nexport default Video;\nexport { VideoBase as Video, VideoBase };\n","/home/user/webos/delivery/app/src/views/video-app/Tiles.js",[],[],"/home/user/webos/delivery/app/src/components/log-app/Log.js",["83"],[],"import kind from \"@enact/core/kind\";\nimport Proptypes from \"prop-types\";\n\nimport css from \"./Log.module.less\";\n\nconst LogBase = kind({\n  name: \"LogBase\",\n\n  styles: {\n    css,\n    className: \"log-box\",\n  },\n\n  propTypes: {\n    children: Proptypes.string,\n    index: Proptypes.number,\n  },\n\n  handlers: {\n    remove: () => {\n      console.log(\"remove\");\n    },\n  },\n\n  render: ({ children, remove, ...rest }) => {\n    delete rest.index;\n\n    return (\n      <div {...rest}>\n        <div className={css.log}>\n          <span>{children}</span>\n        </div>\n      </div>\n    );\n  },\n});\n\nconst Log = LogBase;\n\nexport default LogBase;\nexport { Log, LogBase };\n","/home/user/webos/delivery/app/src/components/video-app/Tile.js",["84"],[],"import kind from \"@enact/core/kind\";\nimport Proptypes from \"prop-types\";\nimport Spottable from \"@enact/spotlight/Spottable\";\n\nimport css from \"./Tile.module.less\";\nimport thumbnail from \"../../../webos-meta/icon.png\";\n\nconst SpottableDiv = Spottable(\"div\");\n\nconst TileBase = kind({\n  name: \"TileBase\",\n\n  styles: {\n    css,\n    className: \"tile-box\",\n  },\n\n  propTypes: {\n    children: Proptypes.string,\n    index: Proptypes.number,\n    onSelect: Proptypes.func,\n    size: Proptypes.number,\n  },\n\n  defaultProps: {\n    size: 200,\n  },\n\n  handlers: {\n    onSelect: (ev, { index, onSelect }) => {\n      if (onSelect) {\n        onSelect({ index });\n      }\n    },\n  },\n\n  render: ({ children, onSelect, size, ...rest }) => {\n    delete rest.index;\n    return (\n      <SpottableDiv {...rest} onClick={onSelect}>\n        <img src={thumbnail} width={size} height={size} />\n        <div>{children}</div>\n      </SpottableDiv>\n    );\n  },\n});\n\nconst Tile = TileBase;\n\nexport default TileBase;\nexport { Tile, TileBase };\n",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":15,"column":11,"nodeType":"89","messageId":"90","endLine":15,"endColumn":15},{"ruleId":"87","severity":1,"message":"91","line":16,"column":5,"nodeType":"89","messageId":"90","endLine":16,"endColumn":9},{"ruleId":"92","severity":1,"message":"93","line":21,"column":6,"nodeType":"94","endLine":21,"endColumn":8,"suggestions":"95"},{"ruleId":"87","severity":1,"message":"96","line":31,"column":11,"nodeType":"89","messageId":"90","endLine":31,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":52,"column":29,"nodeType":"99","messageId":"100","endLine":52,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":59,"column":9,"nodeType":"103","messageId":"104","endLine":59,"endColumn":64,"fix":"105"},{"ruleId":"92","severity":1,"message":"106","line":34,"column":6,"nodeType":"94","endLine":34,"endColumn":8,"suggestions":"107"},{"ruleId":"92","severity":1,"message":"106","line":34,"column":6,"nodeType":"94","endLine":34,"endColumn":8,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":25,"column":24,"nodeType":"89","messageId":"111","endLine":25,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":41,"column":9,"nodeType":"103","endLine":41,"endColumn":59},"no-catch-shadow",["114"],"no-use-before-define","'init' was used before it was defined.","Identifier","usedBeforeDefined","'loop' was used before it was defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'start'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'findHandler' was used before it was defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement","notSelfClosing",{"range":"116","text":"117"},"React Hook useEffect has a missing dependency: 'getVids'. Either include it or remove the dependency array.",["118"],["119"],"no-unused-vars","'remove' is defined but never used.","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-shadow",{"desc":"120","fix":"121"},[1293,1306]," />",{"desc":"122","fix":"123"},{"desc":"122","fix":"124"},"Update the dependencies array to be: [start]",{"range":"125","text":"126"},"Update the dependencies array to be: [getVids]",{"range":"127","text":"128"},{"range":"129","text":"128"},[577,579],"[start]",[903,905],"[getVids]",[859,861]]