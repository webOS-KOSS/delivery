[{"/home/user/webos/register-car/app/src/index.js":"1","/home/user/webos/register-car/app/src/main.js":"2","/home/user/webos/register-car/app/src/store/index.js":"3","/home/user/webos/register-car/app/src/App/App.js":"4","/home/user/webos/register-car/app/src/App/AppStateDecorator.js":"5","/home/user/webos/register-car/app/src/views/log-app/LogPanel.js":"6","/home/user/webos/register-car/app/src/views/video-app/VideoPanel.js":"7","/home/user/webos/register-car/app/src/views/log-app/Logs.js":"8","/home/user/webos/register-car/app/src/views/video-app/Video.js":"9","/home/user/webos/register-car/app/src/views/video-app/VideoList.js":"10","/home/user/webos/register-car/app/src/views/video-app/Tiles.js":"11","/home/user/webos/register-car/app/src/components/log-app/Log.js":"12","/home/user/webos/register-car/app/src/components/video-app/Tile.js":"13"},{"size":450,"mtime":1664613289109,"results":"14","hashOfConfig":"15"},{"size":408,"mtime":1664613289109,"results":"16","hashOfConfig":"15"},{"size":621,"mtime":1664613289109,"results":"17","hashOfConfig":"15"},{"size":1580,"mtime":1665207156354,"results":"18","hashOfConfig":"15"},{"size":371,"mtime":1664613289109,"results":"19","hashOfConfig":"15"},{"size":2133,"mtime":1665218499447,"results":"20","hashOfConfig":"15"},{"size":1529,"mtime":1665207095158,"results":"21","hashOfConfig":"15"},{"size":588,"mtime":1665204145268,"results":"22","hashOfConfig":"15"},{"size":1515,"mtime":1665219016895,"results":"23","hashOfConfig":"15"},{"size":1200,"mtime":1665218688343,"results":"24","hashOfConfig":"15"},{"size":722,"mtime":1665204955426,"results":"25","hashOfConfig":"15"},{"size":656,"mtime":1665205513816,"results":"26","hashOfConfig":"15"},{"size":1013,"mtime":1665205073614,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"90eglz",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},"/home/user/webos/register-car/app/src/index.js",[],[],["74"],"/home/user/webos/register-car/app/src/main.js",[],[],"/home/user/webos/register-car/app/src/store/index.js",[],[],"/home/user/webos/register-car/app/src/App/App.js",["75"],[],"import kind from \"@enact/core/kind\";\nimport { Panels, Routable, Route } from \"@enact/sandstone/Panels\";\nimport ThemeDecorator from \"@enact/sandstone/ThemeDecorator\";\nimport { SlideLeftArranger } from \"@enact/ui/ViewManager\";\nimport PropTypes from \"prop-types\";\n\nimport LogPanel from \"../views/log-app/LogPanel\";\nimport VideoPanel from \"../views/video-app/VideoPanel\";\n\nimport AppStateDecorator from \"./AppStateDecorator\";\n\nconst RoutablePanels = Routable({ navigate: \"onBack\" }, Panels);\n\nconst Sample = kind({\n  name: \"App\",\n\n  propTypes: {\n    onNavigate: PropTypes.func,\n    path: PropTypes.string,\n  },\n\n  handlers: {\n    onFirstPanel: (ev, { onNavigate }) => onNavigate({ path: \"/first\" }),\n    onSecondPanel: (ev, { onNavigate }) =>\n      onNavigate({ path: \"/first/second\" }),\n  },\n\n  render: ({ onFirstPanel, onNavigate, onSecondPanel, path, ...rest }) => {\n    return (\n      <RoutablePanels\n        {...rest}\n        arranger={SlideLeftArranger}\n        onBack={onNavigate}\n        path={path}\n      >\n        <Route\n          component={LogPanel}\n          onClick={onSecondPanel}\n          next=\"second\"\n          path=\"first\"\n          title=\"대충 여기가 메인\"\n        >\n          <Route\n            component={VideoPanel}\n            // onClick={onFirstPanel}\n            next=\"first\"\n            path=\"second\"\n            title=\"대충 여기가 등록할 곳\"\n          />\n        </Route>\n      </RoutablePanels>\n    );\n  },\n});\n\nconst AppBase = AppStateDecorator(Sample);\nconst App = ThemeDecorator(AppBase);\n\nexport default App;\nexport { App, AppBase };\n","/home/user/webos/register-car/app/src/App/AppStateDecorator.js",[],[],"/home/user/webos/register-car/app/src/views/log-app/LogPanel.js",["76","77","78","79","80","81","82"],[],"import { Header, Panel } from \"@enact/sandstone/Panels\";\nimport Scroller from \"@enact/ui/Scroller\";\nimport Button from \"@enact/sandstone/Button\";\nimport Logs from \"./Logs\";\nimport LS2Request from \"@enact/webos/LS2Request\";\nimport { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LogPanel = ({ onClick }) => {\n  const [logs, setLogs] = useState([\"도착/수령 시간 | 도착/수령\"]);\n  const bridge = new LS2Request();\n\n  async function start() {\n    let ret = await init();\n    loop();\n  }\n\n  useEffect(() => {\n    start();\n  }, []);\n\n  const init = () => {\n    return new Promise((resolve, reject) => {\n      let params = {};\n      let lsRequest = {\n        service: \"luna://com.delivery.app.service\",\n        method: \"init\",\n        parameters: params,\n        onSuccess: (msg) => {\n          findHandler(msg);\n          resolve();\n          console.log(msg);\n        },\n        onFailure: (err) => {\n          console.log(err);\n          reject();\n        },\n      };\n      bridge.send(lsRequest);\n    });\n  };\n\n  const findHandler = (res) => {\n    let lst = [];\n    const results = res.results;\n    for (let i in results) {\n      let text = `${String(results[i].time)} | `;\n      if (results[i].status === \"arrived\") {\n        text += \"도착\";\n      }\n      if (results[i].status == \"recieved\") {\n        text += \"수령\";\n      }\n      lst.unshift(text);\n    }\n    setLogs(lst);\n    console.log(lst);\n  };\n\n  const loop = () => {\n    let params = { subscribe: true };\n    let lsRequest = {\n      service: \"luna://com.delivery.app.service\",\n      method: \"loop\",\n      parameters: params,\n      onSuccess: (msg) => {\n        console.log(msg);\n        findHandler(msg);\n      },\n      onFailure: (err) => {\n        console.log(err);\n      },\n    };\n    bridge.send(lsRequest);\n  };\n\n  return (\n    <Panel>\n      <Header title=\"log app\" />\n      <Button onClick={init}>init</Button>\n      <Button onClick={onClick}>video</Button>\n      <Scroller>\n        <Logs>{logs}</Logs>\n      </Scroller>\n    </Panel>\n  );\n};\n\nLogPanel.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default LogPanel;\n","/home/user/webos/register-car/app/src/views/video-app/VideoPanel.js",["83"],[],"import kind from \"@enact/core/kind\";\nimport ThemeDecorator from \"@enact/sandstone/ThemeDecorator\";\nimport { Panels } from \"@enact/sandstone/Panels\";\nimport Chanageable from \"@enact/ui/Changeable\";\nimport PropTypes from \"prop-types\";\n\nimport VideoList from \"./VideoList\";\nimport Video from \"./Video\";\n\nimport css from \"./VideoPanel.module.less\";\n\nconst Sample = kind({\n  name: \"App\",\n\n  styles: {\n    css,\n    className: \"app\",\n  },\n\n  propTypes: {\n    index: PropTypes.number,\n    video: PropTypes.number,\n    onNavigate_: PropTypes.func,\n    onSelectVid: PropTypes.func,\n    backBtn: PropTypes.func,\n  },\n\n  defaultProps: {\n    index: 0,\n  },\n\n  handlers: {\n    onSelectVid: (ev, { onNavigate_, onSelectVid }) => {\n      if (onSelectVid) {\n        onSelectVid({\n          video: ev.index,\n        });\n      }\n\n      // navigate to the detail panel on selection\n      if (onNavigate_) {\n        onNavigate_({\n          index: 1,\n        });\n      }\n    },\n\n    backBtn: ({ onNavigate_ }) => {\n      onNavigate_({\n        index: 0,\n      });\n    },\n  },\n\n  render: ({ index, video, onNavigate_, onSelectVid, ...rest }) => (\n    <div {...rest}>\n      <Panels index={index} onBack={onNavigate_}>\n        <VideoList onSelectVid={onSelectVid}></VideoList>\n        <Video index={video} backBtn={onNavigate_} />\n      </Panels>\n    </div>\n  ),\n});\n\nconst VideoPanel = Chanageable(\n  { prop: \"index\", change: \"onNavigate_\" },\n  Chanageable({ prop: \"video\", change: \"onSelectVid\" }, Sample)\n);\n\nexport default ThemeDecorator(VideoPanel);\n","/home/user/webos/register-car/app/src/views/log-app/Logs.js",[],[],"/home/user/webos/register-car/app/src/views/video-app/Video.js",["84"],[],"/home/user/webos/register-car/app/src/views/video-app/VideoList.js",["85"],[],"import { Header, Panel } from \"@enact/sandstone/Panels\";\nimport Scroller from \"@enact/ui/Scroller\";\nimport Button from \"@enact/sandstone/Button\";\nimport Proptype from \"prop-types\";\nimport LS2Request from \"@enact/webos/LS2Request\";\nimport { useEffect, useState } from \"react\";\n\nimport Tiles from \"./Tiles\";\n\nconst VideoList = ({ onSelectVid, onClick, ...rest }) => {\n  const [tiles, setTiles] = useState([\"loading\"]);\n\n  const bridge = new LS2Request();\n  const getVids = () => {\n    let params = {};\n    let lsRequest = {\n      service: \"luna://com.delivery.app.service\",\n      method: \"getVids\",\n      parameter: params,\n      onSuccess: (msg) => {\n        console.log(msg);\n        setTiles(msg.vidlist);\n      },\n      onFailure: (err) => {\n        console.log(err);\n      },\n    };\n    bridge.send(lsRequest);\n  };\n\n  useEffect(() => {\n    getVids();\n  }, []);\n\n  return (\n    <Panel {...rest}>\n      <Header title=\"Videos\" />\n      <Button onClick={onClick}>log</Button>\n      <Scroller>\n        <Tiles onSelectVid={onSelectVid}>{tiles}</Tiles>\n      </Scroller>\n    </Panel>\n  );\n};\n\nVideoList.prototype = {\n  onSelectVid: Proptype.func,\n  onClick: Proptype.func,\n};\n\nexport default VideoList;\n","/home/user/webos/register-car/app/src/views/video-app/Tiles.js",[],[],"/home/user/webos/register-car/app/src/components/log-app/Log.js",["86"],[],"import kind from \"@enact/core/kind\";\nimport Proptypes from \"prop-types\";\n\nimport css from \"./Log.module.less\";\n\nconst LogBase = kind({\n  name: \"LogBase\",\n\n  styles: {\n    css,\n    className: \"log-box\",\n  },\n\n  propTypes: {\n    children: Proptypes.string,\n    index: Proptypes.number,\n  },\n\n  handlers: {\n    remove: () => {\n      console.log(\"remove\");\n    },\n  },\n\n  render: ({ children, remove, ...rest }) => {\n    delete rest.index;\n\n    return (\n      <div {...rest}>\n        <div className={css.log}>\n          <span>{children}</span>\n        </div>\n      </div>\n    );\n  },\n});\n\nconst Log = LogBase;\n\nexport default LogBase;\nexport { Log, LogBase };\n","/home/user/webos/register-car/app/src/components/video-app/Tile.js",["87"],[],"import kind from \"@enact/core/kind\";\nimport Proptypes from \"prop-types\";\nimport Spottable from \"@enact/spotlight/Spottable\";\n\nimport css from \"./Tile.module.less\";\nimport thumbnail from \"../../../webos-meta/icon.png\";\n\nconst SpottableDiv = Spottable(\"div\");\n\nconst TileBase = kind({\n  name: \"TileBase\",\n\n  styles: {\n    css,\n    className: \"tile-box\",\n  },\n\n  propTypes: {\n    children: Proptypes.string,\n    index: Proptypes.number,\n    onSelect: Proptypes.func,\n    size: Proptypes.number,\n  },\n\n  defaultProps: {\n    size: 200,\n  },\n\n  handlers: {\n    onSelect: (ev, { index, onSelect }) => {\n      if (onSelect) {\n        onSelect({ index });\n      }\n    },\n  },\n\n  render: ({ children, onSelect, size, ...rest }) => {\n    delete rest.index;\n    return (\n      <SpottableDiv {...rest} onClick={onSelect}>\n        <img src={thumbnail} width={size} height={size} />\n        <div>{children}</div>\n      </SpottableDiv>\n    );\n  },\n});\n\nconst Tile = TileBase;\n\nexport default TileBase;\nexport { Tile, TileBase };\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":28,"column":14,"nodeType":"92","messageId":"93","endLine":28,"endColumn":26},{"ruleId":"90","severity":1,"message":"94","line":14,"column":9,"nodeType":"92","messageId":"93","endLine":14,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":14,"column":21,"nodeType":"92","messageId":"97","endLine":14,"endColumn":25},{"ruleId":"95","severity":1,"message":"98","line":15,"column":5,"nodeType":"92","messageId":"97","endLine":15,"endColumn":9},{"ruleId":"99","severity":1,"message":"100","line":20,"column":6,"nodeType":"101","endLine":20,"endColumn":8,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"103","line":30,"column":11,"nodeType":"92","messageId":"97","endLine":30,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":51,"column":29,"nodeType":"106","messageId":"107","endLine":51,"endColumn":31},{"ruleId":"108","severity":1,"message":"109","line":80,"column":15,"nodeType":"110","messageId":"111","endLine":80,"endColumn":29},{"ruleId":"112","severity":1,"message":"113","line":58,"column":9,"nodeType":"114","messageId":"115","endLine":58,"endColumn":46,"fix":"116"},{"ruleId":"99","severity":1,"message":"117","line":34,"column":6,"nodeType":"101","endLine":34,"endColumn":8,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"117","line":33,"column":6,"nodeType":"101","endLine":33,"endColumn":8,"suggestions":"119"},{"ruleId":"90","severity":1,"message":"120","line":25,"column":24,"nodeType":"92","messageId":"93","endLine":25,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":41,"column":9,"nodeType":"114","endLine":41,"endColumn":59},"no-catch-shadow",["123"],"no-unused-vars","'onFirstPanel' is defined but never used.","Identifier","unusedVar","'ret' is assigned a value but never used.","no-use-before-define","'init' was used before it was defined.","usedBeforeDefined","'loop' was used before it was defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'start'. Either include it or remove the dependency array.","ArrayExpression",["124"],"'findHandler' was used before it was defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement","notSelfClosing",{"range":"125","text":"126"},"React Hook useEffect has a missing dependency: 'getVids'. Either include it or remove the dependency array.",["127"],["128"],"'remove' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-shadow",{"desc":"129","fix":"130"},[1237,1250]," />",{"desc":"131","fix":"132"},{"desc":"131","fix":"133"},"Update the dependencies array to be: [start]",{"range":"134","text":"135"},"Update the dependencies array to be: [getVids]",{"range":"136","text":"137"},{"range":"138","text":"137"},[545,547],"[start]",[854,856],"[getVids]",[860,862]]